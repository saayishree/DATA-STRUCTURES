//DELETE THE NODE WITHOUT THE HEAD POINTER
#include<iostream>
using namespace std;
//#include<conio.h>

class linked_list
{
 public: int data;
	 linked_list *next;
	 void create();
	 void print();
	 void Delete_Node(linked_list *node);
}*head=NULL;

void linked_list::create()
{
 int n,i,data;
 cout<<"ENTER THE NO OF ELEMENTS: ";
 cin>>n;
 linked_list *ptr,*temp;
 cout<<"\nENTER THE DATA: ";
 for(i=1;i<=n;i++)
 {
  cin>>data;
  ptr=new linked_list();
  ptr->data=data;
  ptr->next=NULL;
  if(head==NULL)
    head=temp=ptr;
  else
  {
   temp->next=ptr;
   temp=ptr;
  }
 }

}

void linked_list::print()
{
 linked_list *ptr=head;
 cout<<"\n";
 while(ptr!=NULL)
 {
  cout<<ptr->data<<"  ";
  ptr=ptr->next;
 }
}

void linked_list::Delete_Node(linked_list *node)
{
 linked_list *ptr=node;

 //TAIL SHOULD NOT BE DELETED

  while(ptr->next->next!=NULL)
  {
   ptr->data=ptr->next->data;
   ptr=ptr->next;
  }
  ptr->data=ptr->next->data;
  ptr->next=NULL;
 }


int main()
{
 
 linked_list l;
 l.create();
 cout<<"\nPRINT THE LIST: ";
 l.print();
 int pos,k=1;
 linked_list *ptr=head;
 cout<<"\nENTER THE POSITION OF THE NODE TO BE DELETED: ";
 cin>>pos;
 while(k<pos)
 {
  ptr=ptr->next;
  k++;
 }


 l.Delete_Node(ptr);
 cout<<"\nPRINT THE LIST AFTER DELETING THE  NODE: ";
 l.print();
 
 return 0;
}


/*output

ENTER THE NO OF ELEMENTS: 5

ENTER THE DATA: 1 2 3 4 5

PRINT THE LIST:
1  2  3  4  5
ENTER THE POSITION OF THE NODE TO BE DELETED: 2

PRINT THE LIST AFTER DELETING THE  NODE:
1  3  4  5
			  */

/*
ENTER THE NO OF ELEMENTS: 5

ENTER THE DATA: 120 10 30 32 18

PRINT THE LIST:
120  10  30  32  18
ENTER THE POSITION OF THE NODE TO BE DELETED: 3

PRINT THE LIST AFTER DELETING THE  NODE:
120  10  32  18
		      */


/*
ENTER THE NO OF ELEMENTS: 5
                                                                                
ENTER THE DATA: 10 20 13 45 23                                                  
                                                                                
PRINT THE LIST:                                                                 
10  20  13  45  23                                                              
ENTER THE POSITION OF THE NODE TO BE DELETED: 1                                 
                                                                                
PRINT THE LIST AFTER DELETING THE  NODE:                                        
20  13  45  23 */

                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                

                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                

                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                